package com.innova.passwordvalidator.rule;

import com.innova.passwordvalidator.rule.impl.RegularExpressionRule;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class RuleTests {

    @Test
    public void testLength() {
        RegularExpressionRule regularExpressionRule = new RegularExpressionRule("[\\w]{5,12}");
        assertAll("length limit tests",
                () -> assertTrue(regularExpressionRule.check("12345")),
                () -> assertTrue(regularExpressionRule.check("123456")),
                () -> assertTrue(regularExpressionRule.check("123456789012")),
                () -> assertFalse(regularExpressionRule.check("1234")),
                () -> assertFalse(regularExpressionRule.check("1234567890123")),
                () -> assertFalse(regularExpressionRule.check("")),
                () -> assertFalse(regularExpressionRule.check(null)));
    }

    @Test
    public void testAtLeastOneNumber() {
        RegularExpressionRule regularExpressionRule = new RegularExpressionRule(".*[0-9].*");
        assertAll("at least one number tests",
                () -> assertTrue(regularExpressionRule.check("12345")),
                () -> assertTrue(regularExpressionRule.check("1")),
                () -> assertTrue(regularExpressionRule.check("123")),
                () -> assertTrue(regularExpressionRule.check("a1a")),
                () -> assertFalse(regularExpressionRule.check("")),
                () -> assertFalse(regularExpressionRule.check("a")),
                () -> assertFalse(regularExpressionRule.check("@")));
    }

    @Test
    public void testAtLeastOneLowercaseLetter() {
        RegularExpressionRule regularExpressionRule = new RegularExpressionRule(".*[a-z].*");
        assertAll("at least one lowercase letter tests",
                () -> assertTrue(regularExpressionRule.check("a")),
                () -> assertTrue(regularExpressionRule.check("123a")),
                () -> assertFalse(regularExpressionRule.check("12345")),
                () -> assertFalse(regularExpressionRule.check("A")),
                () -> assertFalse(regularExpressionRule.check("123")),
                () -> assertFalse(regularExpressionRule.check("")),
                () -> assertFalse(regularExpressionRule.check("@")),
                () -> assertFalse(regularExpressionRule.check(null)));
    }

    @Test
    public void testNoFollowRepeatString() {
        RegularExpressionRule regularExpressionRule = new RegularExpressionRule(".*(.+)\\1.*", false);
        assertAll("no follow repeat string test",
                () -> assertTrue(regularExpressionRule.check("12345")),
                () -> assertTrue(regularExpressionRule.check("a")),
                () -> assertTrue(regularExpressionRule.check("a1a")),
                () -> assertTrue(regularExpressionRule.check("abAB")),
                () -> assertTrue(regularExpressionRule.check(" ")),
                () -> assertTrue(regularExpressionRule.check(null)),
                () -> assertFalse(regularExpressionRule.check("aa")),
                () -> assertFalse(regularExpressionRule.check("1212")),
                () -> assertFalse(regularExpressionRule.check("@@")),
                () -> assertFalse(regularExpressionRule.check("  ")));
    }

    /**
     * Must consist of a mixture of lowercase letters and numerical digits only, with at least one
     * of each.
     * Must be between 5 and 12 characters in length.
     * Must not contain any sequence of characters immediately followed by the same sequence.
     */
    @Test
    public void testComplex() {
        List<Rule> ruleList = new ArrayList<>();
        ruleList.add(new RegularExpressionRule("[0-9a-z]{5,12}"));
        ruleList.add(new RegularExpressionRule(".*[0-9].*"));
        ruleList.add(new RegularExpressionRule(".*[a-z].*"));
        ruleList.add(new RegularExpressionRule(".*(\\w+)\\1.*", false));

        assertAll("password validate rule test",
                () -> assertTrue(ruleList.stream().allMatch(x -> x.check("1234a"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("1"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("12345"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("1234A"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("1234Aa"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("12312"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("123123"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("12ABab"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("abab"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("ababab1"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("我是中文a1"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("@!@#a2"))),
                () -> assertTrue(ruleList.stream().allMatch(x -> x.check("1234567890ab"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("1234567890abc"))),
                () -> assertFalse(ruleList.stream().allMatch(x -> x.check("")))
        );
    }
}
